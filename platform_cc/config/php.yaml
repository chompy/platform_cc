provision:
    -
        desc: "Create 'web' user."
        cmd: |
            useradd -d /app -m -p 'secret~' web
            usermod -a -G staff web
            chown -R web:web /app
    -
        desc: "Install additional dependencies."
        cmd: |
            apt-get install -y rsync git unzip python-pip python-dev ruby ruby-dev \
                gem nodejs npm libyaml-dev nano less
            apt-get clean
            mkdir -p /var/lib/gems
            chown -R web:web /var/lib/gems
            chown -R root:staff /usr/bin
            chmod -R g+rw /usr/bin
            ln -s /usr/bin/nodejs /usr/bin/node
    -
        desc: "Additional PHP configuration."
        cmd: |
            sed -i "s/user = .*/user = web/g" /usr/local/etc/php-fpm.d/www.conf
            sed -i "s/group = .*/group = web/g" /usr/local/etc/php-fpm.d/www.conf
            echo "date.timezone = UTC" >> /usr/local/etc/php/php.ini
            echo "memory_limit = 512M" >> /usr/local/etc/php/php.ini
            ln -s /usr/local/sbin/php-fpm /usr/sbin/php5-fpm
            ln -s /usr/local/sbin/php-fpm /usr/sbin/php-fpm7.0
            ln -s /usr/local/sbin/php-fpm /usr/sbin/php-fpm7.1-zts

    -
        desc: "Compile php.ini."
        cmd: |
            cat /usr/local/etc/php/conf.d/*.ini >> /usr/local/etc/php/php.ini
            rm /usr/local/etc/php/conf.d/*.ini

    -
        desc: "Install composer."
        cmd: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php composer-setup.php --install-dir=/usr/local/bin
            rm composer-setup.php
            ln -s /usr/local/bin/composer.phar /usr/local/bin/composer

    -
        desc: "Running composer."
        build_flavor: "composer"
        cmd: |
            php -d memory_limit=-1 /usr/local/bin/composer.phar install -n -d /app
        user: web

runtime:
    -
        desc: "Symlink php.ini from site root."
        cmd: |
            [ -f /app/php.ini ] && ln -s /app/php.ini /usr/local/etc/php/conf.d/app.ini
        user: root

extensions:
    curl:
        core: true
    json:
        core: true
    sqlite3:
        core: true
    memcached:
        "php:5": |
            apt-get install -y libmemcached-dev zlib1g-dev
            echo '\n' | pecl install memcached-2.2.0
            docker-php-ext-enable memcached
    redis:
        "php:5": |
            echo '\n' | pecl install redis
            docker-php-ext-enable redis
    gd:
        "php:5": |
            apt-get install -y libfreetype6-dev libjpeg62-turbo-dev libpng12-dev
            docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
            docker-php-ext-install -j$(nproc) gd
    imagick:
        "php:5": |
            apt-get install -y imagemagick libmagickcore-dev libmagickwand-dev
            echo '\n' | pecl install imagick
            docker-php-ext-enable imagick
    intl:
        "php:5": |
            apt-get install -y libicu-dev
            docker-php-ext-install -j$(nproc) intl
    pdo_mysql:
        "php:5": |
            docker-php-ext-install -j$(nproc) pdo_mysql
    mcrypt:
        "php:5": |
            apt-get install -y libmcrypt-dev
            docker-php-ext-install -j$(nproc) mcyrpt
    mysql:
        "php:5": |
            docker-php-ext-install -j$(nproc) mysql
    mysqli:
        "php:5": |
            docker-php-ext-install -j$(nproc) mysqli
    xsl:
        "php:5": |
            apt-get install -y libxslt1-dev
            docker-php-ext-install -j$(nproc) xsl
    zip:
        "php:5": |
            docker-php-ext-install -j$(nproc) zip
    sockets:
        "php:5": |
            docker-php-ext-install -j$(nproc) sockets
    exif:
        "php:5": |
            docker-php-ext-install -j$(nproc) exif


# extensions to install by default
default_extensions:
    - intl
    - xsl
    - mysql
    - mysqli
    - gd
    - pdo_mysql
    - sockets
    - exif
    - mcrypt